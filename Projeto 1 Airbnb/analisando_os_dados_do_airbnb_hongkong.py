# -*- coding: utf-8 -*-
"""Analisando_os_Dados_do_Airbnb_HongKong.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16Gk2Of4QTELDHWZG28mI6KkLn5G0Pmul

# Análise dos Dados do Airbnb - Hong Kong

O [Airbnb](https://www.airbnb.com.br/) já é considerado como sendo a **maior empresa hoteleira da atualidade**. Ah, o detalhe é que ele **não possui nenhum hotel**!

Conectando pessoas que querem viajar (e se hospedar) com anfitriões que querem alugar seus imóveis de maneira prática, o Airbnb fornece uma plataforma inovadora para tornar essa hospedagem alternativa.

No final de 2018, a Startup fundada 10 anos atrás, já havia **hospedado mais de 300 milhões** de pessoas ao redor de todo o mundo, desafiando as redes hoteleiras tradicionais.

Uma das iniciativas do Airbnb é disponibilizar dados do site, para algumas das principais cidades do mundo. Por meio do portal [Inside Airbnb](http://insideairbnb.com/get-the-data.html), é possível baixar uma grande quantidade de dados para desenvolver projetos e soluções de *Data Science*.

<center><img alt="Analisando Airbnb" width="10%" src="https://www.area360.com.au/wp-content/uploads/2017/09/airbnb-logo.jpg"></center>

**Neste *notebook*, iremos analisar os dados referentes à cidade de Hong Kong, e ver quais insights podem ser extraídos a partir de dados brutos.**

**INCLUIR ALGUNS DADOS TURÍSTICOS RELEVANTES SOBRE HONG KONG**

> Indented block



DADOS GEOGÁFICOS, HISTÓRICOS, POPULAÇÃO, TAMANHO, TURISTAS QUE RECEBE, ETC

> Indented block

## Obtenção dos Dados
"""

# Commented out IPython magic to ensure Python compatibility.
#Importar os pacotes necessarios
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import seaborn as sns
# %matplotlib inline

#Importar o arquivo listings.csv para um DataFrame
df = pd.read_csv('http://data.insideairbnb.com/china/hk/hong-kong/2020-03-17/visualisations/listings.csv')

"""## Análise dos Dados

**Dicionário das variáveis**

* id: número de identificação do imóvel
* name: nome da propriedade anunciada
* host_id: número de identificação do proprietário (anfitrião) 
* host_name: Nome do anfitrião
* neighbourhood_group: esta coluna não contém nenhum valor válido
* neighbourhood: bairro em que a propriedade está localizada
* latitude: coordenada da latitude da propriedade
* longitude: coordenada da longitude da propriedade
* room_type: tipo de propriedade oferecida (quarto privado, quarto compartilhado ou apartamento/casa inteira) 
* price: valor da diária da propriedade (em HK$ - dólar de Hong Kong)
* minimum_nights: quantidade mínima de noites para reserva
* number_of_reviews: número de reviews que a propriedade possui
* last_review: data do último review
reviews_per_month - quantidade de reviews por mês
* calculated_host_listings_count - quantidade de imóveis do mesmo anfitrião
availability_365: número de dias de disponibilidade dentro de 365 dias


Antes de iniciar qualquer análise, é importante verificar a forma básica do *dataset*, por meio da visualização das primeiras cinco entradas.
"""

#Mostrar as 5 primeiras entradas do dataset
df.head()

#Mostrar os bairros onde se localizam as propriedades
df['neighbourhood'].unique()

"""### **Q1. Quantos atributos (variáveis) e quantas entradas o conjunto de dados possui? Quais os tipos das variáveis?**

Quantidade de entradas que o conjunto de dados possui, bem como os tipos de dados de cada coluna.

OBS: Este *dataset* é uma versão "resumida" do Airbnb. Na mesma página existe uma versão mais completa, com 106 variáveis (`listings.csv.gz`).
"""

#Identificar o volume de dados do dataset
print(f'Entradas (número de linhas): {df.shape[0]}')
print(f'Variáveis (número de colunas): {df.shape[1]}\n')

#Verificar os tipos de dados de cada coluna do dataset
print('Os tipos de dados em cada coluna são:\n')
display(df.dtypes)

"""### **Q2. Qual a porcentagem de valores ausentes no *dataset*?**

A qualidade de um *dataset* está diretamente relacionada à quantidade de valores ausentes. É importante entender logo no início se esses valores nulos são significativos comparados ao total de entradas.

* É possível ver que a coluna `neighbourhood_group` possui 100% dos seus valores faltantes. 
* As variáveis `reviews_per_month` e `last_review` possuem valores nulos em mais de um terço das linhas.
* As variáveis `name` têm aproximadamente 0,068% dos valores nulos.
"""

#Rrdenar em ordem decrescente as variáveis por seus valores ausentes
((df.isnull().sum() / df.shape[0])*100).sort_values(ascending=False)

"""### **Q3. Qual o tipo de distribuição das variáveis?**"""

#Plotar o histograma das variáveis numéricas
df.hist(bins=15, figsize=(20,20));

"""### **Q4. Há outliers presentes?**

Pela distribuição do histograma, é possível verificar indícios da presença de *outliers* (por exemplo, nas variáveis `price`, `minimum_nights` e `calculated_host_listings_count`.

Os valores não seguem uma distruição, e distorcem toda a representação gráfica. Para confirmar, há duas maneiras rápidas que auxiliam a detecção de *outliers*. São elas:

* Resumo estatístico por meio do método `describe()`
* Plotar `boxplots` para a variável.
"""

#Analisar o resumo estatístico das variáveis numéricas de interesse
df[['price', 'minimum_nights', 'number_of_reviews', 'reviews_per_month',
    'calculated_host_listings_count', 'availability_365']].describe()

"""Com base no resumo estatístico, a existência de outliers é confirmada:

* A variável `price` possui 75% dos seus valores abaixo de HK\$ 800, porém seu valor máximo mostra que há propriedades com valor de HK\$ 77980.

* O valor máximo de `minimum_nights` é de 1100 dias, o que corresponde há mais de três anos.

#### Boxplot para minimum_nights
"""

df.minimum_nights.plot(kind='box', vert=False, figsize=(20, 3))
plt.show()

"""O gráfico Boxplot mostra claramente a existência de outliers."""

#Verificar a quantidade de valores acima de 30 dias para minimum_nights
print(f'A variável minimum_nights apresenta {len(df[df.minimum_nights > 30])} entradas acima de 30 dias.')
print(f'Isto corresponde a {len(df[df.minimum_nights > 30]) / df.shape[0]*100:.2f}% das entradas.')

"""#### Boxplot para price"""

df.price.plot(kind='box', vert=False, figsize=(20, 3),)
plt.show()

#Verificar a quantidade de valores acima de 1500 para price
print(f'A variável price apresenta {len(df[df.price > 2000])} entradas acima de HK$2000')
print(f'Isso corresponde a {((len(df[df.price > 2000]) / df.shape[0])*100):.2f}% das entradas')

"""#### Histogramas sem *outliers*

Uma vez que *outliers* foram identificados nas variáveis `price` e `minimum_nights`, é importante limpar o *DataFrame* e plotar novamente os histogramas.
"""

#Remover os outliers em um novo DataFrame
df_clean = df.copy()
df_clean.drop(df_clean[df_clean.price > 2000].index, axis=0, inplace=True)
df_clean.drop(df_clean[df_clean.minimum_nights > 30].index, axis=0, inplace=True)

#Remover neighbourhood_group, pois está vazio
df_clean.drop('neighbourhood_group', axis=1, inplace=True)

# Plotar o histograma para as variáveis numéricas
df_clean.hist(bins=15, figsize=(20,10));

"""### **Q5. Existe correlação entre as variáveis?**

A correlação entra as variáveis pode ser medida pela matriz de correlação e um heatmap pode ser contruído a partir dessa matriz, usando a biblioteca seaborn.

OBS: É importante lembrar que correlação não indica causalidade!!!
"""

#Criar uma matriz de correlação
correlação = df_clean[['price', 'minimum_nights', 'number_of_reviews', 'reviews_per_month',
    'calculated_host_listings_count', 'availability_365']].corr()
display(correlação)

#Plotar um heatmap a partir das correlações
sns.heatmap(correlação, cmap='RdBu', fmt='.2f', square=True, linecolor='white', annot=True);

"""### **Q6. Qual quantidade de propriedades disponíveis em Hong Kong?**

A coluna da variável `room_type` indica o tipo de propriedade anunciada, que pode variar entre apartamentos/casas inteiras, quarto inteiro ou mesmo quarto compartilhado com outras pessoas.
O Airbnb em Hong Kong ainda inclui quartos de hotel, o que não acontece em outras cidades (por exemplo, Rio de Janeiro).
"""

#Mostrar a quantidade de cada tipo de imóvel disponível
df_clean.room_type.value_counts()

#Mostrar a porcentagem de cada tipo de imóvel disponível
(df_clean.room_type.value_counts()/ df_clean.shape[0])*100

"""### **Q7. Quais as localidades mais caras em Hong Kong?**"""

#Verificar preços por bairros, na média (top 10)
df_clean.groupby(['neighbourhood']).price.mean().sort_values(ascending=False)[:10]

#Plotar os imóveis pela latitude-longitude
df_clean.plot(kind="scatter", x='longitude', y='latitude', alpha=0.4, c=df_clean['price'], s=8,
              cmap=plt.get_cmap('jet'), figsize=(12,8));

"""## Conclusões

Foi feita apenas uma análise superficial na base de dados do Airbnb relativos à cidade de Hong Kong.
Nesta análise percebe-se que existem *outliers* em algumas das variáveis. 

Também pode-se notar que em algumas localidades há poucos imóveis disponíveis, o que pode distorcer as informações estatísticas de alguns atributos.

Por fim, lembra-se que este *dataset* é uma versão resumida, ideal apenas para uma abordagem inicial. Recomenda-se que seja usado, em uma próxima análise exploratória, o conjunto de dados completos, com 106 atributos disponíveis.
"""

